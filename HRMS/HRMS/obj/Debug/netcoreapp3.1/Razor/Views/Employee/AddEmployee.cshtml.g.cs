#pragma checksum "C:\Users\FB\project\HRMS\HRMS\HRMS\Views\Employee\AddEmployee.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a1ec42a24b24b8bc0c03496feb32de8adea79dbd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_AddEmployee), @"mvc.1.0.view", @"/Views/Employee/AddEmployee.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\FB\project\HRMS\HRMS\HRMS\Views\_ViewImports.cshtml"
using HRMS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\FB\project\HRMS\HRMS\HRMS\Views\_ViewImports.cshtml"
using HRMS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a1ec42a24b24b8bc0c03496feb32de8adea79dbd", @"/Views/Employee/AddEmployee.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"26138e49f151ff190efdd4c94fa397320e6b4e01", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_AddEmployee : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\FB\project\HRMS\HRMS\HRMS\Views\Employee\AddEmployee.cshtml"
  
    Layout = "_Layout";

#line default
#line hidden
#nullable disable
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd4696", async() => {
                WriteLiteral("\r\n    <meta charset=\"utf-8\">\r\n    <meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\r\n\r\n    <title>Forms / Elements - NiceAdmin Bootstrap Template</title>\r\n    <meta");
                BeginWriteAttribute("content", " content=\"", 260, "\"", 270, 0);
                EndWriteAttribute();
                WriteLiteral(" name=\"description\">\r\n    <meta");
                BeginWriteAttribute("content", " content=\"", 302, "\"", 312, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""keywords"">

    <!-- Favicons -->
    <link href=""assets/img/favicon.png"" rel=""icon"">
    <link href=""assets/img/apple-touch-icon.png"" rel=""apple-touch-icon"">

    <!-- Google Fonts -->
    <link href=""https://fonts.gstatic.com"" rel=""preconnect"">
    <link href=""https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i"" rel=""stylesheet"">

    <!-- Vendor CSS Files -->
    <link href=""assets/vendor/bootstrap/css/bootstrap.min.css"" rel=""stylesheet"">
    <link href=""assets/vendor/bootstrap-icons/bootstrap-icons.css"" rel=""stylesheet"">
    <link href=""assets/vendor/boxicons/css/boxicons.min.css"" rel=""stylesheet"">
    <link href=""assets/vendor/quill/quill.snow.css"" rel=""stylesheet"">
    <link href=""assets/vendor/quill/quill.bubble.css"" rel=""stylesheet"">
    <link href=""assets/vendor/remixicon/remixicon.css"" rel=""stylesheet"">
    <link href=""assets/vendor/simple-datatabl");
                WriteLiteral(@"es/style.css"" rel=""stylesheet"">

    <!-- Template Main CSS File -->
    <link href=""assets/css/style.css"" rel=""stylesheet"">

    <!-- =======================================================
    * Template Name: NiceAdmin - v2.4.1
    * Template URL: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/
    * Author: BootstrapMade.com
    * License: https://bootstrapmade.com/license/
    ======================================================== -->
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd7798", async() => {
                WriteLiteral(@"



    </aside><!-- End Sidebar-->

    <main id=""main"" class=""main"">

        <div class=""pagetitle"">
            <h1>Form Elements</h1>
            <nav>
                <ol class=""breadcrumb"">
                    <li class=""breadcrumb-item""><a href=""index.html"">Home</a></li>
                    <li class=""breadcrumb-item"">Organisation</li>
                    <li class=""breadcrumb-item active"">Add Employee</li>
                </ol>
            </nav>
        </div><!-- End Page Title -->

        <section class=""section"">
            <div class=""row"">
                <div class=""col-lg-6"">

                    <div class=""card"">
                        <div class=""card-body"">
                            <h5 class=""card-title"">General Form Elements</h5>

                            <!-- General Form Elements -->
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd8965", async() => {
                    WriteLiteral(@"
                                <div class=""row mb-3"">
                                    <label for=""inputText"" class=""col-sm-2 col-form-label"">Text</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
                                    <label for=""inputEmail"" class=""col-sm-2 col-form-label"">Email</label>
                                    <div class=""col-sm-10"">
                                        <input type=""email"" class=""form-control"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
                                    <label for=""inputPassword"" class=""col-sm-2 col-form-label"">Password</label>
                                    <div class=""col-sm-10"">
             ");
                    WriteLiteral(@"                           <input type=""password"" class=""form-control"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
                                    <label for=""inputNumber"" class=""col-sm-2 col-form-label"">Number</label>
                                    <div class=""col-sm-10"">
                                        <input type=""number"" class=""form-control"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
                                    <label for=""inputNumber"" class=""col-sm-2 col-form-label"">File Upload</label>
                                    <div class=""col-sm-10"">
                                        <input class=""form-control"" type=""file"" id=""formFile"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
      ");
                    WriteLiteral(@"                              <label for=""inputDate"" class=""col-sm-2 col-form-label"">Date</label>
                                    <div class=""col-sm-10"">
                                        <input type=""date"" class=""form-control"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
                                    <label for=""inputTime"" class=""col-sm-2 col-form-label"">Time</label>
                                    <div class=""col-sm-10"">
                                        <input type=""time"" class=""form-control"">
                                    </div>
                                </div>

                                <div class=""row mb-3"">
                                    <label for=""inputColor"" class=""col-sm-2 col-form-label"">Color Picker</label>
                                    <div class=""col-sm-10"">
                                        <input type=""color"" class=""form-contr");
                    WriteLiteral(@"ol form-control-color"" id=""exampleColorInput"" value=""#4154f1"" title=""Choose your color"">
                                    </div>
                                </div>
                                <div class=""row mb-3"">
                                    <label for=""inputPassword"" class=""col-sm-2 col-form-label"">Textarea</label>
                                    <div class=""col-sm-10"">
                                        <textarea class=""form-control"" style=""height: 100px""></textarea>
                                    </div>
                                </div>
                                <fieldset class=""row mb-3"">
                                    <legend class=""col-form-label col-sm-2 pt-0"">Radios</legend>
                                    <div class=""col-sm-10"">
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" type=""radio"" name=""gridRadios"" id=""gridRadios1"" value=""option1"" chec");
                    WriteLiteral(@"ked>
                                            <label class=""form-check-label"" for=""gridRadios1"">
                                                First radio
                                            </label>
                                        </div>
                                        <div class=""form-check"">
                                            <input class=""form-check-input"" type=""radio"" name=""gridRadios"" id=""gridRadios2"" value=""option2"">
                                            <label class=""form-check-label"" for=""gridRadios2"">
                                                Second radio
                                            </label>
                                        </div>
                                        <div class=""form-check disabled"">
                                            <input class=""form-check-input"" type=""radio"" name=""gridRadios"" id=""gridRadios"" value=""option"" disabled>
                                            <label class=""form-chec");
                    WriteLiteral(@"k-label"" for=""gridRadios3"">
                                                Third disabled radio
                                            </label>
                                        </div>
                                    </div>
                                </fieldset>
                                <div class=""row mb-3"">
                                    <legend class=""col-form-label col-sm-2 pt-0"">Checkboxes</legend>
                                    <div class=""col-sm-10"">

                                        <div class=""form-check"">
                                            <input class=""form-check-input"" type=""checkbox"" id=""gridCheck1"">
                                            <label class=""form-check-label"" for=""gridCheck1"">
                                                Example checkbox
                                            </label>
                                        </div>

                                        <div class=""form-check"">
      ");
                    WriteLiteral(@"                                      <input class=""form-check-input"" type=""checkbox"" id=""gridCheck2"" checked>
                                            <label class=""form-check-label"" for=""gridCheck2"">
                                                Example checkbox 2
                                            </label>
                                        </div>

                                    </div>
                                </div>

                                <div class=""row mb-3"">
                                    <label class=""col-sm-2 col-form-label"">Disabled</label>
                                    <div class=""col-sm-10"">
                                        <input type=""text"" class=""form-control"" value=""Read only / Disabled"" disabled>
                                    </div>
                                </div>

                                <div class=""row mb-3"">
                                    <label class=""col-sm-2 col-form-label"">Select</labe");
                    WriteLiteral("l>\r\n                                    <div class=\"col-sm-10\">\r\n                                        <select class=\"form-select\" aria-label=\"Default select example\">\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd17118", async() => {
                        WriteLiteral("Open this select menu");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    BeginWriteTagHelperAttribute();
                    __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                    __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd18583", async() => {
                        WriteLiteral("One");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd19912", async() => {
                        WriteLiteral("Two");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd21241", async() => {
                        WriteLiteral("Three");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                        </select>
                                    </div>
                                </div>

                                <div class=""row mb-3"">
                                    <label class=""col-sm-2 col-form-label"">Multi Select</label>
                                    <div class=""col-sm-10"">
                                        <select class=""form-select"" multiple aria-label=""multiple select example"">
                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd23048", async() => {
                        WriteLiteral("Open this select menu");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    BeginWriteTagHelperAttribute();
                    __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                    __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd24513", async() => {
                        WriteLiteral("One");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd25842", async() => {
                        WriteLiteral("Two");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                            ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd27171", async() => {
                        WriteLiteral("Three");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                        </select>
                                    </div>
                                </div>

                                <div class=""row mb-3"">
                                    <label class=""col-sm-2 col-form-label"">Submit Button</label>
                                    <div class=""col-sm-10"">
                                        <button type=""submit"" class=""btn btn-primary"">Submit Form</button>
                                    </div>
                                </div>

                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"<!-- End General Form Elements -->

                        </div>
                    </div>

                </div>

                <div class=""col-lg-6"">

                    <div class=""card"">
                        <div class=""card-body"">
                            <h5 class=""card-title"">Advanced Form Elements</h5>

                            <!-- Advanced Form Elements -->
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd30503", async() => {
                    WriteLiteral(@"
                                <div class=""row mb-5"">
                                    <label class=""col-sm-2 col-form-label"">Switches</label>
                                    <div class=""col-sm-10"">
                                        <div class=""form-check form-switch"">
                                            <input class=""form-check-input"" type=""checkbox"" id=""flexSwitchCheckDefault"">
                                            <label class=""form-check-label"" for=""flexSwitchCheckDefault"">Default switch checkbox input</label>
                                        </div>
                                        <div class=""form-check form-switch"">
                                            <input class=""form-check-input"" type=""checkbox"" id=""flexSwitchCheckChecked"" checked>
                                            <label class=""form-check-label"" for=""flexSwitchCheckChecked"">Checked switch checkbox input</label>
                                        </div>
                    ");
                    WriteLiteral(@"                    <div class=""form-check form-switch"">
                                            <input class=""form-check-input"" type=""checkbox"" id=""flexSwitchCheckDisabled"" disabled>
                                            <label class=""form-check-label"" for=""flexSwitchCheckDisabled"">Disabled switch checkbox input</label>
                                        </div>
                                        <div class=""form-check form-switch"">
                                            <input class=""form-check-input"" type=""checkbox"" id=""flexSwitchCheckCheckedDisabled"" checked disabled>
                                            <label class=""form-check-label"" for=""flexSwitchCheckCheckedDisabled"">Disabled checked switch checkbox input</label>
                                        </div>
                                    </div>
                                </div>

                                <div class=""row mb-5"">
                                    <label class=""col-sm-2 col-f");
                    WriteLiteral(@"orm-label"">Ranges</label>
                                    <div class=""col-sm-10"">
                                        <div>
                                            <label for=""customRange1"" class=""form-label"">Example range</label>
                                            <input type=""range"" class=""form-range"" id=""customRange1"">
                                        </div>
                                        <div>
                                            <label for=""disabledRange"" class=""form-label"">Disabled range</label>
                                            <input type=""range"" class=""form-range"" id=""disabledRange"" disabled>
                                        </div>
                                        <div>
                                            <label for=""customRange2"" class=""form-label"">Min and max with steps</label>
                                            <input type=""range"" class=""form-range"" min=""0"" max=""5"" step=""0.5"" id=""customRange2"">
      ");
                    WriteLiteral(@"                                  </div>
                                    </div>
                                </div>

                                <div class=""row mb-3"">
                                    <label class=""col-sm-2 col-form-label"">Floating labels</label>
                                    <div class=""col-sm-10"">
                                        <div class=""form-floating mb-3"">
                                            <input type=""email"" class=""form-control"" id=""floatingInput"" placeholder=""name@example.com"">
                                            <label for=""floatingInput"">Email address</label>
                                        </div>
                                        <div class=""form-floating mb-3"">
                                            <input type=""password"" class=""form-control"" id=""floatingPassword"" placeholder=""Password"">
                                            <label for=""floatingPassword"">Password</label>
                         ");
                    WriteLiteral(@"               </div>
                                        <div class=""form-floating mb-3"">
                                            <textarea class=""form-control"" placeholder=""Leave a comment here"" id=""floatingTextarea"" style=""height: 100px;""></textarea>
                                            <label for=""floatingTextarea"">Comments</label>
                                        </div>
                                        <div class=""form-floating mb-3"">
                                            <select class=""form-select"" id=""floatingSelect"" aria-label=""Floating label select example"">
                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd35833", async() => {
                        WriteLiteral("Open this select menu");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    BeginWriteTagHelperAttribute();
                    __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                    __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd37302", async() => {
                        WriteLiteral("One");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd38635", async() => {
                        WriteLiteral("Two");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1ec42a24b24b8bc0c03496feb32de8adea79dbd39968", async() => {
                        WriteLiteral("Three");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                            </select>
                                            <label for=""floatingSelect"">Works with selects</label>
                                        </div>
                                    </div>
                                </div>

                                <div class=""row mb-5"">
                                    <label class=""col-sm-2 col-form-label"">Input groups</label>
                                    <div class=""col-sm-10"">
                                        <div class=""input-group mb-3"">
                                            <span class=""input-group-text"" id=""basic-addon1""></span>
                                            <input type=""text"" class=""form-control"" placeholder=""Username"" aria-label=""Username"" aria-describedby=""basic-addon1"">
                                        </div>

                                        <div class=""input-group mb-3"">
                                            <input type=""tex");
                    WriteLiteral(@"t"" class=""form-control"" placeholder=""Recipient's username"" aria-label=""Recipient's username"" aria-describedby=""basic-addon2"">
                                            <span class=""input-group-text"" id=""basic-addon2""></span>
                                        </div>

                                        <label for=""basic-url"" class=""form-label"">Your vanity URL</label>
                                        <div class=""input-group mb-3"">
                                            <span class=""input-group-text"" id=""basic-addon3"">https://example.com/users/</span>
                                            <input type=""text"" class=""form-control"" id=""basic-url"" aria-describedby=""basic-addon3"">
                                        </div>

                                        <div class=""input-group mb-3"">
                                            <span class=""input-group-text"">$</span>
                                            <input type=""text"" class=""form-control"" aria-label=""Am");
                    WriteLiteral(@"ount (to the nearest dollar)"">
                                            <span class=""input-group-text"">.00</span>
                                        </div>

                                        <div class=""input-group mb-3"">
                                            <input type=""text"" class=""form-control"" placeholder=""Username"" aria-label=""Username"">
                                            <span class=""input-group-text""></span>
                                            <input type=""text"" class=""form-control"" placeholder=""Server"" aria-label=""Server"">
                                        </div>

                                        <div class=""input-group"">
                                            <span class=""input-group-text"">With textarea</span>
                                            <textarea class=""form-control"" aria-label=""With textarea""></textarea>
                                        </div>
                                    </div>
                    ");
                    WriteLiteral("            </div>\r\n\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"<!-- End General Form Elements -->

                        </div>
                    </div>

                </div>
            </div>
        </section>

    </main><!-- End #main -->
    <!-- ======= Footer ======= -->
    <footer id=""footer"" class=""footer"">
        <div class=""copyright"">
            &copy; Copyright <strong><span>NiceAdmin</span></strong>. All Rights Reserved
        </div>
        <div class=""credits"">
            <!-- All the links in the footer should remain intact. -->
            <!-- You can delete the links only if you purchased the pro version. -->
            <!-- Licensing information: https://bootstrapmade.com/license/ -->
            <!-- Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/ -->
            Designed by <a href=""https://bootstrapmade.com/"">BootstrapMade</a>
        </div>
    </footer><!-- End Footer -->

    <a href=""#"" class=""back-to-top d-flex align-items-cen");
                WriteLiteral(@"ter justify-content-center""><i class=""bi bi-arrow-up-short""></i></a>

    <!-- Vendor JS Files -->
    <script src=""assets/vendor/apexcharts/apexcharts.min.js""></script>
    <script src=""assets/vendor/bootstrap/js/bootstrap.bundle.min.js""></script>
    <script src=""assets/vendor/chart.js/chart.min.js""></script>
    <script src=""assets/vendor/echarts/echarts.min.js""></script>
    <script src=""assets/vendor/quill/quill.min.js""></script>
    <script src=""assets/vendor/simple-datatables/simple-datatables.js""></script>
    <script src=""assets/vendor/tinymce/tinymce.min.js""></script>
    <script src=""assets/vendor/php-email-form/validate.js""></script>

    <!-- Template Main JS File -->
    <script src=""assets/js/main.js""></script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
